---
layout:     post
title:      "2017-07-23周记"
subtitle:   ""
date:       2017-07-23 12:00:00
author:     "S0u1"
header-img: "img/post-bg-2015.jpg"
tags:
    - 学习
---
## 本周学习sqli labs的一些总结  
### 1.双查询注入  
[http://www.91ri.org/7636.html](http://www.91ri.org/7636.html)

原理：  
当在一个聚合函数，比如count函数后面如果使用分组语句就会把查询的一部分以错误的形式显示出来。  
应用场景：  
这种方法适用于有报错的场景，如果注入的时候没有返回位,可以通过这种方式进行显示。  
payload：  

>union select 1 from (select count(\*),concat(floor(rand(0)*2),(注入语句))a from information_schema.tables group by a)b  

例子：  
![](http://i4.piimg.com/601801/1fa12bcea57eab4c.png)
  
![](http://i4.piimg.com/601801/72c0b2d0c26114e2.png)
  
### 2.盲注  
用到的几个函数：  
>length(str)：返回str字符串的长度。  
substr(str, pos, len)：将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始。  
mid(str,pos,len):跟上面的一样，截取字符串。  
ascii(str)：返回字符串str的最左面字符的ASCII代码值。  
ord(str):同上，返回ascii码。  
if(a,b,c) :a为条件，a为true，返回b，否则返回c，如if(1>2,1,0),返回0

编写脚本时的payload：

>基于bool的Payload：'and ascii(substr((select database()),{},1))>{} %23'.format(i,j)  
基于时间的Payload：'and if(ascii(substr((select database()),{},1))>{},sleep(5),0) %23'.format(i,j)

### 3.HTPP参数污染
原理：  
一些常见的Web服务器对同样名称的参数出现多次的处理方式不同,因此waf在过滤规则上可能产生问题被绕过。  
![](http://i4.piimg.com/601801/c202108696d212e9.png)  
例子：

>http://www.xxx.com/xxx.php?id=1&id=1'+查询语句

### 4.宽字节注入（该部分还有待深入学习）  
原理：  
MySQL在使用GBK编码的时候（set character_set_client=gbk），会认为两个字符为一个汉字，例如%aa%5c就是一个汉字（前一个ascii码大于128才能到汉字的范围）。  
当GPC开启或使用addslashes函数过滤提交的参数时，提交的单引号'会被转义成\'。    
因此可以想办法将 ' 前面添加的 \ 除掉:  
%df吃掉\具体的原因是urlencode(\')=%5c%27，我们在%5c%27前面添加%df，形成%df%5c%27，而上面提到的mysql在GBK编码方式的时候会将两个字节当做一个汉字，此时%df%5c就是一个汉字，%27则作为一个单独的符号在外面，同时也就达到了我们的目的。  
措施：  
使用mysql_real_escape_string。mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集。但是它也需要先通过mysql_set_charset()先进行指定。


### somthingelse  
优先级问题  
and的优先级高于or，因此这里先判断password=’1’，这个语句是false，那么后半部分就变成了‘1’ = ‘1’ and false。前面的username=’Dumb’为True，那么True or False，最后结果为True，成功登录。 
![](http://i4.piimg.com/601801/d399edb734286750.png) 
注释掉后部分，username=’1’是False，’1’=’1’为True。
![](http://i4.piimg.com/601801/ab2d883fe28fee0d.png)
updatexml报错注入
>or updatexml(0,concat(0x2b5e,查询语句),0),'','')#

### 零碎  
@@datadir 读取数据库路径   
@@basedir MYSQL 获取安装路径   
mysql_real_escape在存入数据库的时候并不会产生作用  
空格被过滤可以使用%a等宽字节代替  
Post情况下将utf-8转换为utf-16或utf-32，例如将'转为utf-16为�'。